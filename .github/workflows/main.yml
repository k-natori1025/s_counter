name: Deploy Scounter CI/CD 

on:
  push:
    branches: ["master"]

env:
  AWS_REGION: us-east-2
  # ECS_SERVICE: s-counter-service
  # ECS_FRONT_SERVICE: front-service
  # ECS_API_SERVICE: api-service
  ECS_CLUSTER: s-counter-cluster
  # ECS_TASK_DEFINITION: .aws/task-definition.json

permissions:
  contents: read

jobs:
  front-test-build-image:
    name: Front Container - Test and Build
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    defaults:
      run:
        working-directory: frontend
    
    steps:
      - uses: actions/checkout@v3

      - name: Build an Image and Run Tests
        run: |
          docker image build --target production -t temp_front_image_name:latest .

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Push the image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_FRONT_SERVER_REPOSITORY }}
        run: |
          docker image tag temp_front_image_name:latest $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

  api-test-build-image:
    name: API Container - Test and Build
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    defaults:
      run:
        working-directory: backend
  
    steps:
      - uses: actions/checkout@v3

      - name: Build an Image and Run Tests
        run: |
          docker image build -t temp_api_image_name:latest .

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Push the image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_API_SERVER_REPOSITORY }}
        run: |
          docker image tag temp_api_image_name:latest $ECR_REGISTRY/$ECR_REPOSITORY:latest
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

  deploy:
    name: Deploy
    runs-on: ubuntu-20.04 
    needs: [front-test-build-image, api-test-build-image]

    steps:

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to ECS for api
        run: |
          aws ecs update-service --service api3 --cluster s-counter-cluster --force-new-deployment
      - name: Deploy to ECS for front
        run: |
          aws ecs update-service --service front2 --cluster s-counter-cluster --force-new-deployment

# Web Container Build/Test
## Get Source
## Build/Test
## Docker Image Build
## Login AWS
## Push image to ECR

# API Container Build/Test
## Get Source
## Build/Test
## Docker Image Build
## Login AWS
## Push image to ECR

# Deploy
## Get Source
## Login AWS
## Edit Task Definition
## Deploy




